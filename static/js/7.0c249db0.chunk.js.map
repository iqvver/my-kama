{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/Validators/Validators.js","Hoc/withAuthRedirect.js","assets/images/ava.jpg","Profile/Profile.module.css","Profile/ProfileInfo/Profile.module.css","Profile/MyPosts/MyPosts.module.css","Profile/MyPosts/Post/Post.module.css","Profile/ProfileInfo/ProfileStatus.js","Profile/ProfileInfo/ProfileDataForm.js","Profile/ProfileInfo/ProfileData.js","Profile/ProfileInfo/ProfileInfo.js","Profile/MyPosts/Post/Post.js","Profile/MyPosts/MyPosts.js","Profile/MyPosts/MyPostsContainer.js","Profile/Profile.js","Profile/ProfileContainer.js"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","emailValidate","test","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","prevProps","prevState","console","log","Box","onDoubleClick","onChange","onBlur","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","Stack","sx","width","spacing","Alert","variant","severity","classes","infoBlock","type","contactsBlok","Object","keys","contacts","map","key","Container","Contact","contactTitle","contactValue","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMeBlock","aboutMe","ProfileInfo","saveProfile","savePhoto","useState","setEditMode","Preloader","Paper","descriptionBlock","src","photos","large","userPhoto","inputFile","target","files","initialValues","formData","then","statusBlock","Post1","item","message","quantity","maxLength10","AddPostFormRedux","Field","MyPosts","memo","postsElements","posts","reverse","p","Post","likesCount","postsBlock","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/7.0c249db0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Box } from '@material-ui/core';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <Box className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Box>\r\n                {props.children}\r\n            </Box>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Vuvz\",\"error\":\"FormsControls_error__1aIVV\",\"formSummaryError\":\"FormsControls_formSummaryError__3y7eP\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Поле пусто';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длинна ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n\r\nexport const emailValidate = value => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return 'Не корректно введен email' }\r\n    else if (value) return undefined;\r\n        return 'Поле пусто'\r\n    }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ava.906be2ae.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Profile_userPhoto__1B6et\",\"content\":\"Profile_content__3Jzc5\",\"descriptionBlock\":\"Profile_descriptionBlock__12mn3\",\"inputFile\":\"Profile_inputFile__2RR4Y\",\"infoBlock\":\"Profile_infoBlock__eSORO\",\"formControl\":\"Profile_formControl__33bgn\",\"error\":\"Profile_error__Ocf_C\",\"formSummaryError\":\"Profile_formSummaryError__2Eq7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3ca6h\",\"descriptionBlock\":\"Profile_descriptionBlock__3zj1O\",\"userPhoto\":\"Profile_userPhoto__2H_hU\",\"inputFile\":\"Profile_inputFile__3qvWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1iijG\",\"postBlock\":\"MyPosts_postBlock__HMTQe\",\"textarea\":\"MyPosts_textarea__2SsWz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__aT7ar\"};","import { Box } from '@mui/system'\r\nimport React, { Component } from 'react'\r\nimport classes from './Profile.module.css'\r\n\r\nexport default class ProfileStatus extends Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n        this.setState({\r\n            status: this.props.status\r\n        });\r\n    }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n                {!this.state.editMode &&\r\n                    <Box>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                            {this.props.status || '---'}</span>\r\n                    </Box>\r\n                }\r\n                {this.state.editMode &&\r\n                    <Box>\r\n                        <input onChange={this.onStatusChange}\r\n                            onBlur={this.deactivateEditMode}\r\n                            autoFocus={true}\r\n                            value={this.state.status} />\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n","import { Box } from '@mui/system';\r\nimport * as React from 'react'\r\nimport { Container } from '@mui/material'\r\nimport classes from './../Profile.module.css'\r\nimport { createField, Input, Textarea } from '../../components/common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport Stack from '@mui/material/Stack';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Box>\r\n                {<button>save</button>}\r\n            </Box>\r\n            <Stack sx={{ width: '100%' }} spacing={2}>\r\n                {error && <Alert variant=\"outlined\" severity=\"error\">{error}</Alert>}\r\n            </Stack>\r\n            <Box className={classes.infoBlock}>\r\n                <h2>Полное имя: {createField('Full name', 'fullName', [], Input)}</h2>\r\n                <h3>Looking for a job: {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}</h3>\r\n                <h3>My professional skills:{createField('Professional skills', 'lookingForAJobDescription', [], Textarea)}</h3>\r\n                <h3>About Me:{createField('About me', 'aboutMe', [], Textarea)}</h3>\r\n            </Box>\r\n            <Box className={classes.contactsBlok}>\r\n                <Box>\r\n                    <b>Contact: </b>\r\n                </Box>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <Container>\r\n                            <Box>\r\n                                {key}: {createField(key, 'contacts.' + key, [], Input)}\r\n                            </Box>\r\n                        </Container>\r\n                    )\r\n                })}\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import { Box } from '@mui/system';\r\nimport React, { Component } from 'react'\r\nimport { Container } from '@mui/material'\r\nimport classes from './../Profile.module.css'\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                {props.isOwner || <button onClick={props.goToEditMode}>edit</button>}\r\n            </Box>\r\n            <Box className={classes.infoBlock}>\r\n                <h2>Полное имя:{props.profile.fullName}</h2>\r\n                <h3>Looking for a job: {props.profile.lookingForAJob ? 'yes' : 'no'}</h3>\r\n                {props.profile.lookingForAJob &&\r\n                    <h3>My professional skills:{props.profile.lookingForAJobDescription}</h3>}\r\n            </Box>\r\n            <Box className={classes.aboutMeBlock}>\r\n                <h3>About Me:{props.profile.aboutMe}</h3>\r\n            </Box>\r\n            <Box className={classes.contactsBlok}>\r\n                <Box>\r\n                    <Box>\r\n                        <b>Contact:</b>\r\n                    </Box>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n                    })}\r\n                </Box>\r\n            </Box>\r\n            \r\n        </Container>\r\n    )\r\n}\r\nconst Contact = ({ contactTitle, contactValue, key }) => {\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                {!contactValue ? false : <Box>{contactTitle} : {contactValue}</Box>}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, { useState } from 'react';\r\nimport classes from './../Profile.module.css'\r\nimport Preloader from './../../components/common/preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\nimport userPhoto from '../../assets/images/ava.jpg'\r\nimport { Box, Paper } from '@material-ui/core';\r\nimport { Container } from '@mui/material'\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileData from './ProfileData'\r\n\r\nconst ProfileInfo = ({ profile, saveProfile, status, updateStatus, isOwner, savePhoto }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => { //загрузка фото на сервер\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        } else {\r\n        }\r\n    }\r\n    const onSubmit = (formData) => { //передача новых данных профиля\r\n        saveProfile(formData).then(() => { //ожидаем завершения редактированя\r\n            setEditMode(false);             //если нет ошибок то false\r\n        });\r\n    }\r\n\r\n    return (\r\n        /*<Box>\r\n             <img className={classes.img} src='https://images.pexels.com/photos/7734954/pexels-photo-7734954.jpeg?auto=compress&cs=tinysrgb&h=650&w=940' />\r\n         </Box>*/\r\n        <Paper>\r\n            <Container className={classes.descriptionBlock}>\r\n                <Box>\r\n                    <img src={profile.photos.large || userPhoto}\r\n                        className={classes.userPhoto} />\r\n                    {isOwner || <input type={'file'} className={classes.inputFile} onChange={onMainPhotoSelected} />}\r\n                </Box>\r\n                <Box>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }}\r\n                            profile={profile} isOwner={isOwner}\r\n                        />}\r\n                </Box>\r\n                <Box className={classes.statusBlock}>\r\n                    <h2>My Status:</h2>\r\n                    <ProfileStatus status={status} updateStatus={updateStatus} />\r\n                </Box>\r\n            </Container>\r\n        </Paper>\r\n    )\r\n}\r\nexport default ProfileInfo;\r\n","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\n//constructor(props) {\r\n// super(props)\r\n// this.state = {\r\n//  quantity: '222'\r\n// } } <Box>like: {this.state.quantity}</Box>\r\n\r\nconst Post1 = (props) => {\r\n    return (\r\n        <Box className={classes.item}>\r\n            <img src='https://cs6.pikabu.ru/avatars/2097/x2097369-1271064885.png' />\r\n            {props.message}\r\n            <Box>\r\n                <Box>Like</Box> {props.quantity}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Post1;\r\n\r\n","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../components/common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../utils/Validators/Validators'\r\nimport classes from './MyPosts.module.css'\r\nimport Post1 from './Post/Post'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Box>\r\n                <Field name='newPostText'\r\n                    component={Textarea}\r\n                    placeholder='Enter your message'\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </Box>\r\n            <Box>\r\n                <button>Add Post</button>\r\n            </Box>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'profileAddPostForm'\r\n})(AddPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = \r\n        [...props.posts].reverse().map(p => <Post1 message={p.message} likesCount={p.likesCount} />);\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <Box>\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n            </Box>\r\n            <Box className={classes.posts}>\r\n                {postsElements}\r\n            </Box>\r\n        </Box>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport { Box } from '@mui/system'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <Box>\r\n            <ProfileInfo profile={props.profile} \r\n                         status={props.status} \r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto} \r\n                         saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Box } from '@mui/system';\r\n\r\nclass ProfileContainer extends Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Box>\r\n                <Profile {...this.props} profile={this.props.profile}\r\n                    isOwner={!!this.props.match.params.userId} //владелец страници или нет\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile} />\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile }), withRouter, withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}