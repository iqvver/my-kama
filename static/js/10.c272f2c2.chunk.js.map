{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/Validators/Validators.js","Hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","emailValidate","test","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","Box","classes","dialog","active","Message","message","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/10.c272f2c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Box } from '@material-ui/core';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <Box className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Box>\r\n                {props.children}\r\n            </Box>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1Vuvz\",\"error\":\"FormsControls_error__1aIVV\",\"formSummaryError\":\"FormsControls_formSummaryError__3y7eP\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Поле пусто';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длинна ${maxLength} символов`;\r\n    return undefined;\r\n}\r\n\r\nexport const emailValidate = value => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return 'Не корректно введен email' }\r\n    else if (value) return undefined;\r\n        return 'Поле пусто'\r\n    }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__hBDAk\",\"dialogItems\":\"Dialogs_dialogItems__29tkp\",\"active\":\"Dialogs_active__2m2CY\",\"messages\":\"Dialogs_messages__UzD8r\",\"message\":\"Dialogs_message__3rgoa\",\"textarea\":\"Dialogs_textarea__3czT9\"};","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <Box className={classes.dialog + ' ' + classes.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </Box>\r\n}\r\n\r\nexport default DialogItem;","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <Box className={classes.dialog}>{props.message}</Box>\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/Validators/Validators';\r\nimport { Box } from '@mui/system';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    }\r\n    return (\r\n        <Box className={classes.dialogs}>\r\n            <Box className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </Box>\r\n            <Box className={classes.messages}>\r\n                <Box>{messagesElements}</Box>\r\n            </Box>\r\n            <Box>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n    const AddMessageForm = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Box>\r\n                    <Field name='newMessageBody'\r\n                        component={Textarea}\r\n                        placeholder='Enter your message' \r\n                        validate={[required, maxLength50]} />\r\n                </Box>\r\n                <Box>\r\n                    <button>Send</button>\r\n                </Box>\r\n            </form>\r\n        )\r\n    }\r\n    \r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { sendMessageCreator, } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage\r\n   }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessageBody) => {\r\n         dispatch(sendMessageCreator(newMessageBody));\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs);"],"sourceRoot":""}